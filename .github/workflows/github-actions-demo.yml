name: GitHub Actions CD
on:
  push:
    # Sequence of patterns matched against refs/heads
    branches:
      - main
    # Sequence of patterns matched against refs/tags
    tags:
      - v2
      - v1.*

env:
  IMAGE_NAME: "student-manager"
  IMAGE_PREFIX: "marcinator"
  IMAGE_FULL: ${{ env.IMAGE_PREFIX }}/${{env.IMAGE_NAME}}


jobs:
  Test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: ['7.0.x' ]
      
    steps:
      - uses: actions/checkout@v4
      - name: Setup dotnet ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
      # You can test your matrix by printing the current dotnet version
      - name: Display dotnet version
        run: dotnet --version
      - name: Test the project before packing
        run: dotnet test StudentManagerTest 
      #- name: build docker image
      #  run: docker build -t marcinator/student-manager:latest  ./StudentManager/
      #- name: push image to repo
      #  run: docker push ${{ env.IMAGE_PREFIX }}/student-manager:latest
        
  Build:
    runs-on: ubuntu-latest
    needs: Test

    steps:
      - uses: actions/checkout@v4
      - name: Login to DockerHub Registry
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
        #- name: build docker image
        #  run: docker build -t marcinator/student-manager:latest  ./StudentManager/
        #- name: push image to repo
        #  run: docker push ${{ env.IMAGE_PREFIX }}/student-manager:latest
        
        # https://github.com/docker/metadata-action
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          tags: |
            type=raw,latest
            type=schedule
            type=semver,pattern=v{{version}}
            type=semver,pattern=v{{major}}.{{minor}}
            type=semver,pattern=v{{major}}
            type=ref,event=branch
            type=sha
            type=edge,branch=main
          images: ${{ env.IMAGE_PREFIX }}/${{env.IMAGE_NAME}}
          flavor: |
            latest=auto
        #https://github.com/docker/build-push-action
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./StudentManager/
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}


  Deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    needs: [Test,Build]
    steps:
      - name: Set the Kubernetes context
        uses: azure/k8s-set-context@v2
        with:
          method: service-account
          k8s-url: https://marcinator.com:6443
          k8s-secret: ${{ secrets.KUBERNETES_SECRET }}
      - name: Checkout source code
        uses: actions/checkout@v3
      - name: Deploy to the Kubernetes cluster
        uses: azure/k8s-deploy@v1
        with:
          namespace: default
          manifests: |
            StudentManager/.config/DatabaseDeployment.yaml
            StudentManager/.config/WebDeployment.yaml
          images: |
            ${{ IMAGE_FULL }}:${{ github.sha }}
