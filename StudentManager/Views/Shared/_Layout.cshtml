@using System.Reflection
<!DOCTYPE html>
<html lang="en" data-bs-theme="dark">
<head>
	<meta charset="utf-8"/>
	<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
	<title>@ViewData["Title"]</title>
	<link rel="shortcut icon" type="image/x-icon" href="~/favicon.ico"/>
	<link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css"/>
	<link rel="stylesheet" href="~/css/site.css" asp-append-version="true"/>
	<link rel="stylesheet" href="~/StudentManager.styles.css" asp-append-version="true"/>

	<script defer src="~/lib/jquery/dist/jquery.min.js"></script>
	<script defer src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
	<script defer src="~/js/site.js" asp-append-version="true"></script>
	<script async src="~/js/Toggler.js" asp-append-version="true"></script>
	<script defer src="https://kit.fontawesome.com/3a6bf2609b.js" crossorigin="anonymous"></script>
</head>
<body>

<header>
	<nav class="navbar navbar-expand-lg bd-navbar sticky-top border-bottom box-shadow mb-3">
		<div class="container-xxl bd-gutter flex-wrap flex-lg-nowrap">
			<a class="navbar-brand" asp-area="" asp-controller="Student" asp-action="List">
				<img src="~/img/graduation.png" alt="Logo" width="30" height="24" class="d-inline-block align-text-top">
				StudentManager
			</a>
			<button class="navbar-toggler" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasNavbar" aria-controls="offcanvasNavbar" aria-label="Toggle navigation">
				<span class="navbar-toggler-icon"></span>
			</button>
			<div class="offcanvas offcanvas-end flex-grow-1" tabindex="-1" id="offcanvasNavbar" aria-labelledby="offcanvasNavbarLabel">
				<div class="offcanvas-header">
					<h5 class="offcanvas-title" id="offcanvasNavbarLabel">Offcanvas</h5>
					<button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
				</div>
				<div class="offcanvas-body p-4 pt-0 p-lg-0  align-items-center">
					<hr class="d-lg-none">
					<ul class="navbar-nav flex-row flex-wrap bd-navbar-nav">
						<li class="nav-item col-6 col-lg-auto">
							<a class="nav-link py-2 px-0 px-lg-2" asp-area="" asp-controller="Student" asp-action="List">Students</a>
						</li>
						<li class="nav-item col-6 col-lg-auto">
							<a class="nav-link py-2 px-0 px-lg-2" asp-area="" asp-controller="Class" asp-action="List">Classes</a>
						</li>
					</ul>
					<hr class="d-lg-none">
					<div class="d-flex position-relative ms-md-auto justify-content-lg-center align-items-center flex-wrap">
						<i id="ThemeToggler" class="fa-solid fa-sun order-4 order-lg-0"></i>
						@if (@User.Identity is {IsAuthenticated: true })
						{
							<div class="dropdown mx-1">
								<div id="ProfileIcon" class="col-md-auto" data-bs-toggle="dropdown" aria-expanded="false">
									<!--use identity profile icon -->
									<img src="~/img/@("DefaultProfile.png")" style="width: 2rem" alt="Student profile picture"/>
								</div>
								<ul class="dropdown-menu dropdown-menu-start dropdown-menu-lg-end">
									<li class="d-none d-lg-block">
										<div class="dropdown-item">@User.Identity?.Name</div>
									</li>
									<li class="d-none d-lg-block">
										<hr class="dropdown-divider">
									</li>
									<li>
										<a class="dropdown-item" asp-area="" asp-controller="Profile" asp-action="Index">Profile</a>
									</li>
									<li>
										<a class="dropdown-item" asp-area="" asp-controller="Account" asp-action="Logout">Logout</a>
									</li>
								</ul>
							</div>
							<div class="d-lg-none">@User.Identity?.Name</div>
							<hr class="d-lg-none w-100">
						}
						else
						{
							<a class="nav-link" asp-area="" asp-controller="Account" asp-action="login" asp-route-returnUrl="@Context.Request.Path">login</a>
						}
					</div>
				</div>
			</div>
		</div>
	</nav>
</header>
<div class="container">
	<main role="main" class="pb-3">
		@RenderBody()
	</main>
</div>

<footer class="border-top footer text-muted">
	<div class="container">
		@{
			var version = Assembly.GetExecutingAssembly().GetName().Version?.ToString();
			// ReSharper disable once RedundantAssignment
			var sha = Environment.GetEnvironmentVariable("COMMIT_SHA");

			#if DEBUG
			sha = "Dev Build";
			#endif
		}
		&copy; @DateTime.Today.Year - StudentManager (@version-@sha)


	</div>
</footer>
@await RenderSectionAsync("Scripts", required: false)
</body>
</html>